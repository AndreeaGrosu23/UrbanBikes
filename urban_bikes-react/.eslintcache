[{"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/index.js":"1","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/registerServiceWorker.js":"2","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/app/App.js":"3","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/common/AppHeader.js":"4","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/common/NotFound.js":"5","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/common/LoadingIndicator.js":"6","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/common/PrivateRoute.js":"7","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/util/APIUtils.js":"8","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/home/Home.js":"9","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/user/login/Login.js":"10","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/user/signup/Signup.js":"11","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/user/profile/Profile.js":"12","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/user/oauth2/OAuth2RedirectHandler.js":"13","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/constants/index.js":"14","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/carousel/CarouselPage.js":"15","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/footer/Footer.js":"16","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/map/GoogleMapBikes.js":"17","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/stations/BikeStations.js":"18","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/stations/StationDetails.js":"19"},{"size":350,"mtime":1607545683976,"results":"20","hashOfConfig":"21"},{"size":4595,"mtime":1607526899696,"results":"22","hashOfConfig":"21"},{"size":3212,"mtime":1610637849293,"results":"23","hashOfConfig":"21"},{"size":1605,"mtime":1610389021026,"results":"24","hashOfConfig":"21"},{"size":571,"mtime":1607526047299,"results":"25","hashOfConfig":"21"},{"size":248,"mtime":1607525648880,"results":"26","hashOfConfig":"21"},{"size":439,"mtime":1607526384838,"results":"27","hashOfConfig":"21"},{"size":1252,"mtime":1607545479140,"results":"28","hashOfConfig":"21"},{"size":2037,"mtime":1610637363170,"results":"29","hashOfConfig":"21"},{"size":4367,"mtime":1610481887274,"results":"30","hashOfConfig":"21"},{"size":3966,"mtime":1610481887276,"results":"31","hashOfConfig":"21"},{"size":1340,"mtime":1607545242401,"results":"32","hashOfConfig":"21"},{"size":1128,"mtime":1607524152188,"results":"33","hashOfConfig":"21"},{"size":397,"mtime":1610301406999,"results":"34","hashOfConfig":"21"},{"size":1473,"mtime":1610394564466,"results":"35","hashOfConfig":"21"},{"size":1633,"mtime":1610481887267,"results":"36","hashOfConfig":"21"},{"size":7275,"mtime":1610637445216,"results":"37","hashOfConfig":"21"},{"size":5158,"mtime":1610637814248,"results":"38","hashOfConfig":"21"},{"size":377,"mtime":1610633486386,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1i7rta9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/index.js",[],["83","84"],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/registerServiceWorker.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/app/App.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/common/AppHeader.js",["85"],"import React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport './AppHeader.css';\n\nclass AppHeader extends Component {\n    render() {\n        return (\n            <header className=\"app-header\">\n                <div className=\"container\">\n                    <div className=\"app-branding\">\n                        <Link to=\"/\" className=\"app-title\">Urban Bikes</Link>\n                    </div>\n                    <div className=\"app-options\">\n                        <nav className=\"app-nav\">\n                            { this.props.authenticated ? (\n                                <ul>\n                                    <li>\n                                        <NavLink to=\"/profile\">Profile</NavLink>\n                                    </li>\n                                    <li>\n                                        <a onClick={this.props.onLogout}>Logout</a>\n                                    </li>\n                                </ul>\n                            ) : (\n                                <ul>\n                                    <li>\n                                        <NavLink to=\"/login\">Login</NavLink>\n                                    </li>\n                                    <li>\n                                        <NavLink to=\"/signup\">Signup</NavLink>\n                                    </li>\n                                </ul>\n                            )}\n                        </nav>\n                    </div>\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default AppHeader;","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/common/NotFound.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/common/LoadingIndicator.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/common/PrivateRoute.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/util/APIUtils.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/home/Home.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/user/login/Login.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/user/signup/Signup.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/user/profile/Profile.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/user/oauth2/OAuth2RedirectHandler.js",["86"],"import React, { Component } from 'react';\nimport { ACCESS_TOKEN } from '../../constants';\nimport { Redirect } from 'react-router-dom';\n\nclass OAuth2RedirectHandler extends Component {\n    getUrlParameter(name) {\n        name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n        var regex = new RegExp('[\\\\?&]'+ name + '=([^&#]*)');\n\n        var results = regex.exec(this.props.location.search);\n        return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n    }\n\n    render() {\n        const token = this.getUrlParameter('token');\n        const error = this.getUrlParameter('error');\n\n        if(token) {\n            localStorage.setItem(ACCESS_TOKEN, token);\n            return <Redirect to={{\n                pathname: \"/profile\",\n                state: { from: this.props.location }\n            }}/>;\n        } else {\n            return <Redirect to={{\n                pathname: \"/login\",\n                state: {\n                    from: this.props.location,\n                    error: error\n                }\n            }}/>;\n        }\n    }\n}\n\nexport default OAuth2RedirectHandler;","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/constants/index.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/carousel/CarouselPage.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/footer/Footer.js",[],"/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/map/GoogleMapBikes.js",["87"],"import React, { useState, useRef, useCallback } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport useSwr from 'swr';\nimport useSupercluster from 'use-supercluster';\nimport { Link } from 'react-router-dom';\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n  } from \"use-places-autocomplete\";\nimport {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    ComboboxList,\n    ComboboxOption,\n  } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport \"./map.css\";\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n\nconst Marker = ({children}) => children;\n\nfunction GoogleMapBikes() {\n\n    const mapRef = useRef();\n    const [zoom, setZoom] = useState(10);\n    const [bounds, setBounds] = useState(null);\n\n    const url = \"http://api.citybik.es/v2/networks\";\n    const {data, error} = useSwr(url, fetcher);\n    const networks = data && !error ? data.networks : [];\n\n    const points = networks.map(network => ({\n        type: \"Feature\",\n        properties: {\n            cluster: false,\n            networkId: network.id,\n            city: network.location.city        \n        },\n        geometry: {\n            type: \"Point\",\n            coordinates: [\n                parseFloat(network.location.longitude),\n                parseFloat(network.location.latitude)\n            ]\n        }\n    }));\n\n    const {clusters, supercluster} = useSupercluster({\n        points,\n        bounds,\n        zoom,\n        options: {radius: 75, maxZoom: 20}\n    });\n\n    const panTo = useCallback(({lat, lng}) => {\n        mapRef.current.panTo({lat, lng});\n        mapRef.current.setZoom(12);\n    }, []);\n\n    return (\n        <div>\n            \n            <div style={{ height: '80vh', width: '100%', marginBottom: \"20px\"}}>\n\n                \n                <Search panTo={panTo} />\n                <Locate panTo={panTo} />\n                <GoogleMapReact \n                bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_KEY}}\n                defaultCenter={{ lat: 44.4268, lng: 26.1025 }} \n                defaultZoom= {2}\n                yesIWantToUseGoogleMapApiInternals\n                onGoogleApiLoaded={({ map }) => {\n                    mapRef.current=map;\n                }}\n                onChange={({ zoom, bounds}) =>{\n                    setZoom(zoom);\n                    setBounds([\n                        bounds.nw.lng,\n                        bounds.se.lat,\n                        bounds.se.lng,\n                        bounds.nw.lat\n                    ]);\n                }}\n                >\n                    {clusters.map(cluster => {\n                        const [longitude, latitude] = cluster.geometry.coordinates;\n                        const {cluster: isCluster, point_count: pointCount} = cluster.properties;\n\n                        if (isCluster) {\n                            return (\n                                <Marker key={cluster.id} \n                                lat={latitude} \n                                lng={longitude}>\n                                    <button className=\"network-marker\" \n\n                                    onClick={() => {\n                                        const expansionZoom = Math.min(\n                                            supercluster.getClusterExpansionZoom(cluster.id),\n                                            20\n                                        );\n                                        mapRef.current.setZoom(expansionZoom);\n                                        mapRef.current.panTo({lat: latitude, lng: longitude});\n                                    }}\n                                    >\n                                    \n                                        <img src=\"./cycling.svg\" alt=\"network\"></img>\n                                    </button>\n                                </Marker>\n                            )\n                        }\n\n                        return (\n                            <Marker key={cluster.properties.networkId} \n                                lat={latitude} \n                                lng={longitude}\n                                \n                                >  \n                                <button className=\"network-marker\"\n                                // onClick={() => {\n                                //     mapRef.current.setZoom(12);\n                                //     mapRef.current.panTo({lat: latitude, lng: longitude});\n                                // }}\n                                >\n                                    <Link to={{\n                                        pathname: `/stations/${cluster.properties.networkId}`,\n                                        state: {network_id: cluster.properties.networkId,\n                                        city: cluster.properties.city,\n                                        latitude: latitude,\n                                        longitude: longitude}\n                                        }}>\n                                        <img src=\"./cycling.svg\" alt=\"network\"></img>\n                                    </Link>\n                                </button>\n                            </Marker>\n                        );\n                    })}\n\n                </GoogleMapReact>\n                \n            </div>\n        </div>\n    );\n}\n\nfunction Locate({ panTo }) {\n    return ( \n    <button className=\"locate\" onClick={() => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            panTo({\n                lat: position.coords.latitude,\n                lng: position.coords.longitude,\n            });\n        }, () => null);\n    }}>\n        <img src=\"compass.svg\" alt=\"compass - locate me\"/>\n    </button>\n    )\n}\n\nfunction Search({ panTo }) {\n    const {\n        ready, \n        value, \n        suggestions: {status, data}, \n        setValue, \n        clearSuggestions,\n    } = usePlacesAutocomplete({\n        requestOptions: {\n            location: { lat: () => 44.4268, lng: () => 26.1025 },\n            radius: 100 * 1000,\n        },\n    });\n\n    return ( \n        <div className=\"search\">\n            <Combobox onSelect={async (address) => {\n                setValue(address, false);\n                clearSuggestions();\n                try {\n                    const results = await getGeocode({address});\n                    const { lat, lng } = await getLatLng(results[0]);\n                    panTo({ lat, lng });\n                } catch(error) {\n                    console.log(\"error!\");\n                }\n            }}\n            >\n                <ComboboxInput value={value}\n                    onChange={(e) => {\n                    setValue(e.target.value);\n                    }}\n                    disables={!ready}\n                    placeholder=\"Enter a city\"\n                />\n                <ComboboxPopover>\n                    <ComboboxList>\n                    {status === \"OK\" && data.map(({id, description}) => (\n                        <ComboboxOption key={id} value={description} />\n                    ))}\n                    </ComboboxList>\n                </ComboboxPopover>\n            </Combobox>\n        </div>\n    );\n}\n\nexport default GoogleMapBikes;","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/stations/BikeStations.js",["88","89"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport GoogleMapReact from 'google-map-react';\nimport useSupercluster from 'use-supercluster';\nimport \"./Stations.css\";\n\nconst Marker = ({children}) => children;\n\nfunction BikeStations() {\n\n    const {state} = useLocation();\n\n    const id = state.network_id;\n    const city = state.city;\n\n    console.log(city);\n\n    const [stations, setStations] = useState([]);\n\n    const mapRef = useRef();\n    const [zoom, setZoom] = useState(10);\n    const [bounds, setBounds] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n          const result = await axios(\n            `http://api.citybik.es/v2/networks/${id}`,\n          );\n          console.log(result.data.network);\n          setStations(result.data.network.stations);\n        };\n     \n        fetchData();\n      }, []);\n\n    console.log(stations);\n\n    const points = stations.map(station => ({\n        type: \"Feature\",\n        properties: {\n            cluster: false,\n            name: station.name,\n            free_bikes: station.free_bikes,\n            empty_slots: station.empty_slots,\n            id: station.id      \n        },\n        geometry: {\n            type: \"Point\",\n            coordinates: [\n                parseFloat(station.longitude),\n                parseFloat(station.latitude)\n            ]\n        }\n    }));\n\n    const {clusters, supercluster} = useSupercluster({\n        points,\n        bounds,\n        zoom,\n        options: {radius: 75, maxZoom: 20}\n    });\n\n    return (\n        <div>\n            { stations.length === 0 ? \n            <p style={{ textAlign: \"center\"}}>No info for stations in {city}</p> \n            :\n            <p style={{ textAlign: \"center\"}}>Here are your stations in {city}</p> \n            } \n            <div style={{ height: '80vh', width: '100%', marginBottom: \"20px\"}}>\n                <GoogleMapReact \n                    bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_KEY}} \n                    defaultCenter={{ lat: state.latitude, lng: state.longitude }} \n                    defaultZoom= {12}\n                    yesIWantToUseGoogleMapApiInternals\n                    onGoogleApiLoaded={({ map }) => {\n                        mapRef.current=map;\n                    }}\n                    onChange={({ zoom, bounds}) =>{\n                        setZoom(zoom);\n                        setBounds([\n                            bounds.nw.lng,\n                            bounds.se.lat,\n                            bounds.se.lng,\n                            bounds.nw.lat\n                        ]);\n                    }}\n                >\n                    {clusters.map(cluster => {\n                        const [longitude, latitude] = cluster.geometry.coordinates;\n                        const {cluster: isCluster, point_count: pointCount} = cluster.properties;\n\n                        if (isCluster) {\n                            return (\n                                <Marker key={cluster.id} \n                                lat={latitude} \n                                lng={longitude}\n                                >\n                                    <button className=\"network-marker\" \n\n                                        onClick={() => {\n                                            const expansionZoom = Math.min(\n                                                supercluster.getClusterExpansionZoom(cluster.id),\n                                                20\n                                            );\n                                            mapRef.current.setZoom(expansionZoom);\n                                            mapRef.current.panTo({lat: latitude, lng: longitude});\n                                        }}\n                                    >\n                                    \n                                        <img src=\"../../bicycle.svg\" alt=\"station-cluster\"></img>\n                                    </button>\n                                </Marker>\n                            )\n                        }\n\n                        return (\n                            <Marker key={cluster.properties.id} \n                                lat={latitude} \n                                lng={longitude}\n                                \n                                >  \n                                <button className=\"network-marker\"\n                                    onClick={() => {\n                                        mapRef.current.setZoom(16);\n                                        mapRef.current.panTo({lat: latitude, lng: longitude});\n                                    }}\n                                >\n                                 \n                                    <img src=\"../../bicycle.svg\" alt=\"station\"></img>\n                                </button>\n                            </Marker>\n                        );\n                })} \n\n                </GoogleMapReact>\n\n                \n            </div>\n        </div>\n    );\n}\n\nexport default BikeStations;","/Users/andreeagrosu/Desktop/coding/codecool/Job_hunting/UrbanBikesApp/urban_bikes-react/src/stations/StationDetails.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":21,"column":41,"nodeType":"96","endLine":21,"endColumn":74},{"ruleId":"97","severity":1,"message":"98","line":7,"column":31,"nodeType":"99","messageId":"100","endLine":7,"endColumn":32,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":90,"column":65,"nodeType":"104","messageId":"105","endLine":90,"endColumn":75},{"ruleId":"106","severity":1,"message":"107","line":35,"column":10,"nodeType":"108","endLine":35,"endColumn":12,"suggestions":"109"},{"ruleId":"102","severity":1,"message":"103","line":92,"column":65,"nodeType":"104","messageId":"105","endLine":92,"endColumn":75},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["112","113"],"no-unused-vars","'pointCount' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-global-assign","no-unsafe-negation",{"messageId":"115","fix":"116","desc":"117"},{"messageId":"118","fix":"119","desc":"120"},{"desc":"121","fix":"122"},"removeEscape",{"range":"123","text":"124"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"125","text":"126"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [id]",{"range":"127","text":"128"},[242,243],"",[242,242],"\\",[931,933],"[id]"]